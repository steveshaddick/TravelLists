<?php

sleep(5);
@session_start();
require_once('../../env/config.php');

require_once BASE_PATH . 'lib/StringUtils.php';
require_once BASE_PATH . 'lib/Encryptor.php';

require_once BASE_PATH . 'models/Main.php' ;
$main = new Main(BASE_PATH);

if ($main->init() !== true) {
	exit();
}

if (!((isset($_POST['token'])) && ($_POST['token'] == $_SESSION['ajaxToken'])))  {
	exit();
}


function returnJSON($arr) {
	
	if (is_array($arr)) {
		$arr['success'] = true;
	} else if ($arr === true) {
		$arr = array('success'=>true);
	} else {
		$arr = array('success'=>false);
	}
	
	if (isset($_POST['bgid'])) {
		$arr['bgid'] = $_POST['bgid'];
	}

	return json_encode($arr);
}



if (isset($_GET['action'])) {
	$action = $_GET['action'];
} else {
	$action = '';
}

header('Cache-Control: no-cache, must-revalidate');
header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');
header('Content-type: application/json');

// Non-Authenticated pages
switch ($action) {

	case 'sendEmail':
		echo returnJSON($main->sendEmail($_POST['adminEmail']));

		break;

	case 'createTrip':

		if ((ENVIRONMENT === 'development') && ($_POST['location'] == 'error')) {

			echo returnJSON(false);

		} else {

			$arr = $main->createTrip(array(
				'tripName'=>'My Trip',
				'userName'=>$_POST['name'],
				'email'=>$_POST['email'],
				'location'=>$_POST['location']
				));

			echo returnJSON($arr);

		}
		break;

	case 'loadTrip':
		$arr = $main->fetchTrip();
		echo returnJSON($arr);
		break;

	case 'addLocation':
		$arr = $main->addLocation($_POST['location']);

		echo returnJSON($arr);
		break;

	case 'addNote':
		$arr = $main->addNote(array(
			'note'=>$_POST['noteText'],
			'fromName'=>$_POST['fromName'],
			'categoryId'=>$_POST['categoryId'],
			'locationId'=>$_POST['locationId'],
			'noteCookie'=>$_POST['noteCookie']
			));

		echo returnJSON($arr);
		break;


	case 'deleteNote':
		$arr = $main->deleteNote($_POST['noteId'], $_POST['noteCookie']);

		echo returnJSON($arr);
		break;

	case 'deleteLocation':
		$arr = $main->deleteLocation($_POST['locationId']);

		echo returnJSON($arr);
		break;

	case 'reorderLocation':
		$arr = $main->reorderLocation($_POST);

		echo returnJSON($arr);
		break;

	case 'saveTrip':

		$arr = $main->saveTrip($_POST);
		echo returnJSON($arr);
		break;

	case 'deleteNotice':
		//$arr = $main->deleteNote($_POST['noteId']);

		echo returnJSON(true);
		break;

	case 'checkLink':
		$arr = $main->checkLink($_POST['noteId'], $_POST['url']);
		echo returnJSON($arr);
		break;

	case 'poll':
		if (!isset($_SESSION['lastPoll'])) {
			$_SESSION['lastPoll'] = time();
		} else {
			if ((time() - $_SESSION['lastPoll']) < 5) {
				echo returnJSON(false);
				exit();
			} else {
				$_SESSION['lastPoll'] = time();
			}
		}
		$polltime = $_POST['polltime'];
		$arr = $main->fetchTrip(intval($_POST['lastLocation']), intval($_POST['lastNote']), intval($_POST['lastNotice']) );
		if ((count($arr['locations']) === 0) && (count($arr['notes']) === 0) && (count($arr['notices']) === 0)) {
			if ($polltime < 600000) {
				$polltime += 15000;
			}
		} else {
			$polltime = 5000;
		}
		$arr['polltime'] = $polltime;
		echo returnJSON($arr);
		break;

	case 'checkEditMode':
		echo returnJSON($main->checkEditMode($_POST['email']));
		break;
	
	case 'closeEditMode':
		$main->closeEditMode();
		break;

	default:
		echo returnJSON(false);
		break;
}

?>